<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dev.webApp.mapper.fiveDucks.AnimeMapper">

    <select id="getAnimeTotalCnt" resultType="int">
        <![CDATA[
        /* 전체 만화책 개수 조회 쿼리 */
        ]]>
        select count(*)
        from web_app_test2.tb_anime
    </select>

    <delete id="deleteAll">
        <![CDATA[
        /* 디비에 쌓여있는 전체 만화책 삭제 쿼리 */
        ]]>
        delete from web_app_test2.tb_anime
    </delete>

    <select id="selectAllAnimeList"
            resultType="com.dev.webApp.domain.fiveDuck.vo.AnimeVO">
        <![CDATA[
        /* 전체 애니 리스트 조회 쿼리 */
        ]]>
        select r_anime_no as animeNo
             , m_n_no as madeNatureNo
             , title as animeTitle
             , author as animeAuthor
             , page_per_anime_cnt as pagePerAnimeCnt
             , use_yn as animeUseYnEnum
             , left(replace(anime_reg_dt, '. ', '-') ,length(replace(anime_reg_dt, '. ', '-')) - 1) as animeRegDt
             , left(replace(reg_dt, '. ', '-') ,length(replace(reg_dt, '. ', '-')) - 1) as regDt
        from web_app_test2.tb_anime
        order by str_to_date(animeRegDt, '%Y-%m-%d') desc
    </select>

    <select id="selectAnimeList"
            parameterType="com.dev.webApp.domain.fiveDuck.dto.request.SelectAnimePaginationRequestDTO"
            resultType="com.dev.webApp.domain.fiveDuck.vo.AnimeVO">
        <![CDATA[
        /* 전체 애니 리스트 조회 쿼리(pagination) */
        ]]>
        select r_anime_no as animeNo
             , m_n_no as madeNatureNo
             , title as animeTitle
             , author as animeAuthor
             , use_yn as animeUseYnEnum
             , left(replace(anime_reg_dt, '. ', '-') ,length(replace(anime_reg_dt, '. ', '-')) - 1) as animeRegDt
             , left(replace(reg_dt, '. ', '-') ,length(replace(reg_dt, '. ', '-')) - 1) as regDt
        from web_app_test2.tb_anime
        order by str_to_date(animeRegDt, '%Y-%m-%d') desc
        limit #{offset}, #{pageSize}
    </select>

    <select id="selectAnimeInfo"
            parameterType="com.dev.webApp.domain.fiveDuck.dto.request.SelectAnimeInfoRequestDTO"
            resultType="com.dev.webApp.domain.fiveDuck.vo.AnimeVO">
        <![CDATA[
        /* 단일 애니 정보 조회 쿼리 */
        ]]>
        select r_anime_no as animeNo
             , m_n_no as madeNatureNo
             , title as animeTitle
             , author as animeAuthor
             , use_yn as animeUseYnEnum
             , left(replace(anime_reg_dt, '. ', '-') ,length(replace(anime_reg_dt, '. ', '-')) - 1) as animeRegDt
             , left(replace(reg_dt, '. ', '-') ,length(replace(reg_dt, '. ', '-')) - 1) as regDt
        from web_app_test2.tb_anime
        where r_anime_no = #{animeNo}
    </select>

    <insert id="insertAnimeInfo"
            parameterType="com.dev.webApp.domain.fiveDuck.dto.request.InsertAnimeInfoRequestDTO">
        <![CDATA[
        /* 애니 정보 삽입 쿼리 */
        insert into web_app_test2.tb_anime(m_n_no, title, author, page_per_anime_cnt, anime_reg_dt)
        value (#{madeNatureNo}, #{title}, #{author}, #{pagePerAnimeCnt}, #{animeRegDt})
        ]]>
        <selectKey
                keyProperty="insertedAnimeNo"
                order="AFTER"
                resultType="Integer">
            /* 만화책 정보 삽입 쿼리 */
            select max(r_anime_no)
            from web_app_test2.tb_anime
        </selectKey>
    </insert>

    <update id="updateAnimeInfo"
            parameterType="com.dev.webApp.domain.fiveDuck.dto.request.UpdateAnimeInfoRequestDTO">
        <![CDATA[
        /* 단일 애니 정보 수정 쿼리 */
        update web_app_test2.tb_anime
        set m_n_no = #{madeNatureNo},
            title = #{title},
            author = #{author},
            page_per_anime_cnt = #{pagePerAnimeCnt},
            anime_reg_dt = #{animeRegDt}
        where r_anime_no = #{animeNo}
        ]]>
    </update>

    <update id="updateAnimeState"
            parameterType="com.dev.webApp.domain.fiveDuck.dto.request.UpdateAnimeStateRequestDTO">
        <![CDATA[
        /* 단일 애니 상태 수정 쿼리 */
        update web_app_test2.tb_anime
        set use_yn = #{animeUseYnEnum}
        where r_anime_no = #{animeNo}
        ]]>
    </update>

    <delete id="deleteAnimeInfo"
            parameterType="Integer">
        <![CDATA[
        /* 단일 애니 삭제 쿼리 */
        delete from web_app_test2.tb_anime
        where r_anime_no = #{animeNo}
        ]]>
    </delete>
</mapper>
