<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dev.pleaseTakecareFiveDucks.config.db.mapper.AnimeDAO">

    <sql id="selectAnimeViewCnt">
        <![CDATA[
        /* 핫한 애니 리스트 조회 쿼리(상세) */
        ]]>
        select r_anime_no        as animeNo
             , count(r_anime_no) as viewCnt
        from plz_tc_fd.tb_anime_view
        group by r_anime_no
        order by viewCnt desc
    </sql>

    <select id="getTotalCnt"
            resultType="int">
        <![CDATA[
        /* 전체 만화책 개수 조회 쿼리 */
        ]]>
        select count(*)
        from plz_tc_fd.tb_anime
        where use_yn = 'y'
    </select>

    <select id="getTotalCntByCondition"
            parameterType="com.dev.pleaseTakecareFiveDucks.anime.domain.dto.request.SelectAnimePaginationRequestDTO"
            resultType="int">
        <![CDATA[
        /* (조건을 기반해서)전체 만화책 개수 조회 쿼리 */
        ]]>
        select count(*)
        from plz_tc_fd.tb_anime as tb_a
        where use_yn = 'y'
        <if test="title != '' and title != null">
            and tb_a.title like concat('%',#{title}, '%')
        </if>
    </select>

    <select id="selectMainAnimationList"
            resultType="com.dev.pleaseTakecareFiveDucks.anime.domain.vo.MainAnimeVO">
        <![CDATA[
        /* 핫한 애니 리스트 조회 쿼리 */
        ]]>
        select tb_a.r_anime_no as animeNo
        , tb_a.title as animeTitle
        , tb_a.finalized_yn as finalizedYnEnum
        , tb_a.link as link
        , tb_a.author as animeAuthor
        , tb_a_t_i.web_thumbnail_url as webThumbnailUrl
        , tb_a.anime_broadcast_cnt as animeBroadcastCnt
        , ifnull(tb_a_v.viewCnt, 0) as viewCnt
        , date_format(tb_a.anime_reg_dt, '%Y-%m-%d') as animeRegDt
        , date_format(tb_a.reg_dt, '%Y-%m-%d') as regDt
        from plz_tc_fd.tb_anime as tb_a
            inner join plz_tc_fd.tb_anime_thumbnail_img as tb_a_t_i
                on tb_a.r_anime_no = tb_a_t_i.r_anime_no
            left outer join (<include refid="selectAnimeViewCnt"/>) as tb_a_v
                on tb_a.r_anime_no = tb_a_v.animeNo
            where tb_a.use_yn = 'y'
        order by tb_a.reg_dt desc
    </select>

    <delete id="deleteAll">
        <![CDATA[
        /* 디비에 쌓여있는 전체 애니 삭제 쿼리 */
        ]]>
        delete
        from plz_tc_fd.tb_anime
    </delete>

    <select id="selectAllAnimeList"
            resultType="com.dev.pleaseTakecareFiveDucks.anime.domain.vo.AnimeVO">
        <![CDATA[
        /* 전체 애니 리스트 조회 쿼리 */
        ]]>
        select r_anime_no                            as animeNo
             , m_n_no                                as madeNatureNo
             , title                                 as animeTitle
             , author                                as animeAuthor
             , link                                  as link
             , finalized_yn                          as finalizedYnEnum
             , anime_broadcast_cnt                   as animeBroadcastCnt
             , use_yn                                as animeUseYnEnum
             , date_format(anime_reg_dt, '%Y-%m-%d') as animeRegDt
             , date_format(reg_dt, '%Y-%m-%d')       as regDt
        from plz_tc_fd.tb_anime
        where use_yn = 'y'
        order by reg_dt desc
    </select>

    <select id="selectAnimePaginationList"
            parameterType="com.dev.pleaseTakecareFiveDucks.anime.domain.dto.request.SelectAnimePaginationRequestDTO"
            resultType="com.dev.pleaseTakecareFiveDucks.anime.domain.vo.AnimeVO">
        <![CDATA[
        /* 전체 애니 리스트 조회 쿼리(pagination) */
        ]]>
        select tb_a.r_anime_no as animeNo
        , tb_a.m_n_no as madeNatureNo
        , tb_a.title as animeTitle
        , tb_a.author as animeAuthor
        , tb_a.link as link
        , tb_a.finalized_yn as finalizedYnEnum
        , tb_a.anime_broadcast_cnt as animeBroadcastCnt
        , tb_a.use_yn as animeUseYnEnum
        , tb_a_t_i.web_thumbnail_url as webThumbnailUrl
        , date_format(tb_a.anime_reg_dt, '%Y-%m-%d') as animeRegDt
        , date_format(tb_a.reg_dt, '%Y-%m-%d') as regDt
        from plz_tc_fd.tb_anime as tb_a
        inner join plz_tc_fd.tb_anime_thumbnail_img as tb_a_t_i
        on tb_a.r_anime_no = tb_a_t_i.r_anime_no
        where tb_a.use_yn = 'y'
        <if test="title != '' and title != null">
            and tb_a.title like concat('%',#{title}, '%')
        </if>
        order by tb_a.reg_dt desc
        limit #{offset}, #{pageSize}
    </select>

    <select id="selectAnimeThumbnailImageListByAnimeNo"
            parameterType="com.dev.pleaseTakecareFiveDucks.anime.domain.dto.request.SelectAnimeThumbnailImageListRequestDTO"
            resultType="com.dev.pleaseTakecareFiveDucks.anime.domain.vo.AnimeThumbnailVO">
        <![CDATA[
        /*
            전체 애니 썸네일 리스트 조회 쿼리
           (리스트 조회의 경우 left outer join 보다, 선택적인 번호만 넘겨서 부분 조회하는 것으로 개발하였습니다)
        */
        ]]>
        select r_anime_no as animeNo
        , web_thumbnail_url as webThumbnailUrl
        from plz_tc_fd.tb_anime_thumbnail_img
        where r_anime_no in (
        <foreach item="item" collection="animeNoList" separator=",">
            #{item}
        </foreach>
        )
    </select>

    <select id="selectAnimeThumbnailImageByAnimeNo"
            resultType="Integer">
        <![CDATA[
        /*
            animeNo 기반 썸네일 개수 조회
        */
        ]]>
        select count(*)
        from plz_tc_fd.tb_anime_thumbnail_img
        where r_anime_no = #{animeNo}
    </select>

    <select id="selectAnimeInfo"
            parameterType="com.dev.pleaseTakecareFiveDucks.anime.domain.dto.request.SelectAnimeInfoRequestDTO"
            resultType="com.dev.pleaseTakecareFiveDucks.anime.domain.vo.AnimeVO">
        <![CDATA[
        /* 단일 애니 상세 정보 조회 쿼리 */
        ]]>
        select tb_a.r_anime_no                            as animeNo
             , tb_a.m_n_no                                as madeNatureNo
             , tb_a.title                                 as animeTitle
             , tb_a.author                                as animeAuthor
             , tb_a.link                                  as link
             , tb_a.finalized_yn                          as finalizedYnEnum
             , tb_a.anime_broadcast_cnt                   as animeBroadcastCnt
             , tb_a.use_yn                                as animeUseYnEnum
             , ifnull(tb_a_v.viewCnt, 0)                  as viewCnt
             , tb_a_t_i.web_thumbnail_url                 as webThumbnailUrl
             , date_format(tb_a.anime_reg_dt, '%Y-%m-%d') as animeRegDt
             , date_format(tb_a.reg_dt, '%Y-%m-%d')       as regDt
        from plz_tc_fd.tb_anime as tb_a
                 left outer join (
            select r_anime_no     as animeNo
                 , count(view_no) as viewCnt
            from plz_tc_fd.tb_anime_view
            group by r_anime_no
        ) as tb_a_v
                                 on tb_a.r_anime_no = tb_a_v.animeNo
                 left outer join plz_tc_fd.tb_anime_thumbnail_img as tb_a_t_i
                                 on tb_a.r_anime_no = tb_a_t_i.r_anime_no
        where tb_a.use_yn = 'y'
          and tb_a.r_anime_no = #{animeNo}
    </select>

    <insert id="insertAnimeInfo"
            parameterType="com.dev.pleaseTakecareFiveDucks.anime.domain.dto.request.InsertAnimeInfoRequestDTO">
        <![CDATA[
        /* 애니 정보 삽입 쿼리 */
        insert into plz_tc_fd.tb_anime(m_n_no, title, author, link, finalized_yn, anime_broadcast_cnt, anime_reg_dt)
        value (#{madeNatureNo}, #{title}, #{author}, #{link}, #{finalizedYnEnum}, #{animeBroadcastCnt}, #{animeRegDt})
        ]]>
        <selectKey
                keyProperty="insertedAnimeNo"
                order="AFTER"
                resultType="Integer">
            /* 애니 정보 조회 쿼리 */
            select max(r_anime_no)
            from plz_tc_fd.tb_anime
        </selectKey>
    </insert>

    <insert id="insertAnimeThumbnailInfo"
            parameterType="com.dev.pleaseTakecareFiveDucks.anime.domain.dto.request.InsertAnimeThumbnailInfoRequestDTO">
        <![CDATA[
        /* 애니 썸네일 정보 삽입 쿼리 */
        insert into plz_tc_fd.tb_anime_thumbnail_img(r_anime_no, web_thumbnail_url)
            value (#{animeNo}, #{webThumbnailUrl})
        ]]>
    </insert>

    <update id="updateAnimeInfo"
            parameterType="com.dev.pleaseTakecareFiveDucks.anime.domain.dto.request.UpdateAnimeInfoRequestDTO">
        <![CDATA[
        /* 단일 애니 정보 수정 쿼리 */
        update plz_tc_fd.tb_anime
        set m_n_no              = #{madeNatureNo}
          , title               = #{title}
          , author              = #{author}
          , link                = #{link}
          , finalized_yn        = #{finalizedYnEnum}
          , anime_broadcast_cnt = #{animeBroadcastCnt}
          , anime_reg_dt        = #{animeRegDt}
          , mod_dt              = now()
        where use_yn = 'y'
          and r_anime_no = #{animeNo}
        ]]>
    </update>

    <update id="updateAnimeThumbnailInfo"
            parameterType="com.dev.pleaseTakecareFiveDucks.anime.domain.dto.request.UpdateAnimeThumbnailInfoRequestDTO">
        <![CDATA[
        /* 애니 썸네일 수정 쿼리 */
        update plz_tc_fd.tb_anime_thumbnail_img
        set web_thumbnail_url = #{webThumbnailUrl}
          , mod_dt            = now()
        where r_anime_no = #{animeNo}
        ]]>
    </update>

    <update id="updateAnimeState"
            parameterType="com.dev.pleaseTakecareFiveDucks.anime.domain.dto.request.UpdateAnimeStateRequestDTO">
        <![CDATA[
        /* 단일 애니 상태 수정 쿼리 */
        update plz_tc_fd.tb_anime
        set use_yn = #{animeUseYnEnum}
          , mod_dt = now()
        where r_anime_no = #{animeNo}
        ]]>
    </update>

    <delete id="deleteAnimeInfo"
            parameterType="Integer">
        <![CDATA[
        /* 단일 애니 삭제 쿼리 */
        delete
        from plz_tc_fd.tb_anime
        where r_anime_no = #{animeNo}
        ]]>
    </delete>

    <delete id="deleteAnimeThumbnailInfo"
            parameterType="Integer">
        <![CDATA[
        /* 단일 애니 썸네일 삭제 쿼리 */
        delete
        from plz_tc_fd.tb_anime_thumbnail_img
        where r_anime_no = #{animeNo}
        ]]>
    </delete>

    <insert id="insertAnimeViewCnt"
            parameterType="com.dev.pleaseTakecareFiveDucks.anime.domain.dto.request.InsertAnimeViewCntRequestDTO">
        <![CDATA[
        /* 애니 조회수 증가 쿼리 */
        ]]>
        insert into plz_tc_fd.tb_anime_view(user_no, r_anime_no)
            value (#{userNo},#{animeNo})
    </insert>
</mapper>
