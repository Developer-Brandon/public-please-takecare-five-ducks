<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dev.pleaseTakecareFiveDucks.config.db.mapper.MovieDAO">

    <select id="getMovieTotalCnt" resultType="int">
        <![CDATA[
        /* 전체 영화 개수 조회 쿼리 */
        ]]>
        select count(*)
        from web_app_test2.tb_movie
    </select>

    <delete id="deleteAll">
        <![CDATA[
        /* 디비에 쌓여있는 전체 영화 삭제 쿼리 */
        ]]>
        delete from web_app_test2.tb_movie
    </delete>

    <select id="selectAllMovieList"
            resultType="com.dev.pleaseTakecareFiveDucks.movie.domain.vo.MovieVO">
        <![CDATA[
        /* 전체 영화 리스트 조회 쿼리 */
        ]]>
        select r_movie_no as movieNo
             , m_n_no as madeNatureNo
             , title as movieTitle
             , director as directorName
             , page_per_movie_cnt as pagePerMovieCnt
             , use_yn as movieUseYnEnum
             , left(replace(movie_reg_dt, '. ', '-') ,length(replace(movie_reg_dt, '. ', '-')) - 1) as movieRegDt
             , left(replace(reg_dt, '. ', '-') ,length(replace(reg_dt, '. ', '-')) - 1) as regDt
        from web_app_test2.tb_movie
        order by str_to_date(movieRegDt, '%Y-%m-%d') desc
    </select>

    <select id="selectMovieList"
            parameterType="com.dev.pleaseTakecareFiveDucks.movie.domain.dto.request.SelectMoviePaginationRequestDTO"
            resultType="com.dev.pleaseTakecareFiveDucks.movie.domain.vo.MovieVO">
        <![CDATA[
        /* 전체 영화 리스트 조회 쿼리(pagination) */
        ]]>
        select r_movie_no as movieNo
             , m_n_no as madeNatureNo
             , title as movieTitle
             , director as directorName
             , page_per_movie_cnt as pagePerMovieCnt
             , use_yn as movieUseYnEnum
             , left(replace(movie_reg_dt, '. ', '-') ,length(replace(movie_reg_dt, '. ', '-')) - 1) as movieRegDt
             , left(replace(reg_dt, '. ', '-') ,length(replace(reg_dt, '. ', '-')) - 1) as regDt
        from web_app_test2.tb_movie
        order by str_to_date(movieRegDt, '%Y-%m-%d') desc
        limit #{offset}, #{pageSize}
    </select>

    <select id="selectMovieInfo"
            parameterType="com.dev.pleaseTakecareFiveDucks.movie.domain.dto.request.SelectMovieInfoRequestDTO"
            resultType="com.dev.pleaseTakecareFiveDucks.movie.domain.vo.MovieVO">
        <![CDATA[
        /* 단일 책 리스트 조회 쿼리 */
        ]]>
        select r_movie_no as movieNo
             , m_n_no as madeNatureNo
             , title as movieTitle
             , director as directorName
             , page_per_movie_cnt as pagePerMovieCnt
             , use_yn as movieUseYnEnum
             , left(replace(movie_reg_dt, '. ', '-') ,length(replace(movie_reg_dt, '. ', '-')) - 1) as movieRegDt
             , left(replace(reg_dt, '. ', '-') ,length(replace(reg_dt, '. ', '-')) - 1) as regDt
        from web_app_test2.tb_movie
        where r_movie_no = #{movieNo}
    </select>

    <insert id="insertMovieInfo"
            parameterType="com.dev.pleaseTakecareFiveDucks.movie.domain.dto.request.InsertMovieInfoRequestDTO">
        <![CDATA[
        /* 영화 정보 삽입 쿼리 */
        insert into web_app_test2.tb_movie(m_n_no, title, director, page_per_movie_cnt, movie_reg_dt)
        value (#{madeNatureNo}, #{title}, #{directorName}, #{pagePerMovieCnt}, #{movieRegDt})
        ]]>
        <selectKey
                keyProperty="insertedMovieNo"
                order="AFTER"
                resultType="Integer">
            /* 영화 정보 삽입 쿼리 */
            select max(r_movie_no)
            from web_app_test2.tb_movie
        </selectKey>
    </insert>

    <update id="updateMovieInfo"
            parameterType="com.dev.pleaseTakecareFiveDucks.movie.domain.dto.request.UpdateMovieInfoRequestDTO">
        <![CDATA[
        /* 단일 영화 정보 수정 쿼리 */
        update web_app_test2.tb_movie
        set m_n_no = #{madeNatureNo},
            title = #{title},
            director = #{directorName},
            page_per_movie_cnt = #{pagePerMovieCnt},
            movie_reg_dt = #{movieRegDt}
        where r_movie_no = #{movieNo}
        ]]>
    </update>

    <update id="updateMovieState"
            parameterType="com.dev.pleaseTakecareFiveDucks.movie.domain.dto.request.UpdateMovieStateRequestDTO">
        <![CDATA[
        /* 단일 영화 상태 수정 쿼리 */
        update web_app_test2.tb_movie
        set use_yn = #{movieUseYnEnum}
        where r_movie_no = #{movieNo}
        ]]>
    </update>

    <delete id="deleteMovieInfo"
            parameterType="Integer">
        <![CDATA[
        /* 단일 영화 삭제 쿼리 */
        delete from web_app_test2.tb_movie
        where r_movie_no = #{movieNo}
        ]]>
    </delete>
</mapper>
