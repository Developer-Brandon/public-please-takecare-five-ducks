<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.1"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
     http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd">

    <!--    <servlet>-->
    <!--        <servlet-name>설정 파일 내부에서 사용되는 임의의 서블릿명</servlet-name>-->
    <!--        <servlet-class>실질적으로 요청에 대해 처리될 물리적인 서블릿크래스명</servlet-class>-->
    <!--    </servlet>-->

    <!--    <servlet-mapping>-->
    <!--        <servlet-name>설정파일 내부에서 사용되는 임의의 서블릿명 '<servlet>' 엘리먼트에 정의된 이름과 일치해야 함-->
    <!--        </servlet-name>-->
    <!--        <url-pattern>url 상에서 실질적으로 요청되는 서블릿명</url-pattern>-->
    <!--    </servlet-mapping>-->

    <!-- 활성화할 profile 적용 -->
    <context-param>
        <param-name>spring.profiles.active</param-name>
        <param-value>local</param-value>
    </context-param>

    <!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<!-- 스프링프레임 워크가 동작하기 위한 설정파일(context파일)의 위치를 알려주는 파라미터 -->
    <context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/root-context.xml</param-value>
	</context-param>

	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

    <!-- 한글 깨짐 방지(UTF8 처리) -->
    <filter>
        <filter-name>encoding</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>encoding</filter-name>
        <servlet-name>appServlet</servlet-name>
    </filter-mapping>

    <!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
        <!-- 서버로 오는 모든 요청을 DispatcherServlet이 받습니다 -->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
        <!-- 모든 요청을 받는 pattern 입니다 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>

    <!-- error page - http error code -->
    <error-page>
        <error-code>307</error-code>
        <location>/error307</location>
    </error-page>

    <error-page>
        <error-code>400</error-code>
        <location>/error400</location>
    </error-page>

    <error-page>
        <error-code>401</error-code>
        <location>/error401</location>
    </error-page>

    <error-page>
        <error-code>404</error-code>
        <location>/error404</location>
    </error-page>

    <error-page>
        <error-code>405</error-code>
        <location>/error405</location>
    </error-page>

    <error-page>
        <error-code>500</error-code>
        <location>/error500</location>
    </error-page>

    <error-page>
        <error-code>503</error-code>
        <location>/error503</location>
    </error-page>

<!--    &lt;!&ndash; error page - exception &ndash;&gt;-->
<!--     전역에서 붙잡아서 error page로 보내버리기 때문에, 전역에서 처리하면 비동기 처리에 대해 대응을 못하게 됩니다 -->
<!--        <error-page>-->
<!--            <exception-type>java.lang.Exception</exception-type>-->
<!--            <location>/exception</location>-->
<!--        </error-page>-->
</web-app>
