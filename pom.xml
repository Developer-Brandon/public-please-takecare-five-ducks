<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         https://maven.apache.org/maven-v4_0_0.xsd">

    <!-- maven에서 사용되는 기본 정보 -->
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.dev</groupId>
    <artifactId>pleaseTakecareFiveDucks</artifactId>
    <name>pleaseTakecareFiveDucks</name>
    <packaging>war</packaging>
    <version>1.0.0-BUILD-SNAPSHOT</version>

    <properties>
        <!-- maven에서 사용되는 properties 정보 -->
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <java-version>1.11</java-version>
        <org.springframework-version>5.0.7.RELEASE</org.springframework-version>
        <org.aspectj-version>1.9.0</org.aspectj-version>
        <org.slf4j-version>1.5.6</org.slf4j-version>
        <junit-version>4.12</junit-version>

        <!-- 기본 encoding 관련 setting -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- maven build시에 test code가 skip되도록 설정합니다. -->
        <maven.test.skip>true</maven.test.skip>
    </properties>

    <dependencies>
        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${org.springframework-version}</version>
            <exclusions>
                <!-- Exclude Commons Logging in favor of SLF4j -->
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>

        <!-- Mock -->
        <!-- https://mvnrepository.com/artifact/org.mockito/mockito-all -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>

        <!-- AspectJ -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${org.aspectj-version}</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${org.slf4j-version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${org.slf4j-version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${org.slf4j-version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.mail</groupId>
                    <artifactId>mail</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.jms</groupId>
                    <artifactId>jms</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jdmk</groupId>
                    <artifactId>jmxtools</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jmx</groupId>
                    <artifactId>jmxri</artifactId>
                </exclusion>
            </exclusions>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.bgee.log4jdbc-log4j2</groupId>
            <artifactId>log4jdbc-log4j2-jdbc4</artifactId>
            <version>1.16</version>
        </dependency>

        <!-- @Inject -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>

        <!-- Servlet 시작 -->
        <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
        <!-- javax.servlet-api -->
        <!-- 웹  관련 요청에 대하여 동적인 처리를 도와주는 기술 -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>

        <!-- jsp-api -->
        <!-- java 언어를 기반으로 웹 서비스를 제공하기 위해 만든 기술 -->
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>javax.servlet.jsp-api</artifactId>
            <version>2.3.3</version>
            <scope>provided</scope>
        </dependency>

        <!-- jslt -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>
        <!-- Servlet 끝 -->

        <!-- taglibs -->
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>datetime</artifactId>
            <version>1.0.1</version>
        </dependency>
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>string</artifactId>
            <version>1.1.0</version>
        </dependency>
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <version>1.1.2</version>
        </dependency>

        <!-- flyway -->
        <dependency>
            <groupId>com.googlecode.flyway</groupId>
            <artifactId>flyway-core</artifactId>
            <version>2.3</version>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.22</version>
        </dependency>

        <!-- MyBatis -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.4.6</version>
        </dependency>

        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>1.3.2</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.30</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${org.springframework-version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.hamcrest/hamcrest-all -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>

        <!-- 5. HikariCP -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>4.0.3</version>
        </dependency>

        <!-- 6.Jsoup -->
        <!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.15.2</version>
        </dependency>

        <!-- 7.json -->
        <!-- https://mvnrepository.com/artifact/org.json/json -->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20220924</version>
        </dependency>

        <!-- 8.Jackson -->
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.14.1</version>
        </dependency>
    </dependencies>

    <!-- maven의 profiles에서 사용할 profiles 정의 -->
    <profiles>
        <!-- mvn package -P 로 명시하지 않을 경우 기본 프로파일 -->
        <profile>
            <id>local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- 로컬환경 또는 개발환경을 판단하는 정보 -->
                <env>local</env>
            </properties>
            <build>
                <!-- local 에서 사용될 plugins -->
                <plugins>
                    <plugin>
                        <artifactId>maven-eclipse-plugin</artifactId>
                        <version>2.9</version>
                        <configuration>
                            <additionalProjectnatures>
                                <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                            </additionalProjectnatures>
                            <additionalBuildcommands>
                                <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                            </additionalBuildcommands>
                            <downloadSources>true</downloadSources>
                            <downloadJavadocs>true</downloadJavadocs>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>2.5.1</version>
                        <configuration>
                            <source>8</source>
                            <target>8</target>
                            <compilerArgument>-Xlint:all</compilerArgument>
                            <showWarnings>true</showWarnings>
                            <showDeprecation>true</showDeprecation>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.2.1</version>
                        <configuration>
                            <mainClass>org.test.int1.Main</mainClass>
                        </configuration>
                    </plugin>
                </plugins>
                <!--
                    local 에서 사용될 resources
                    1. mvn package -P 프로파일명 으로 패키징 시에 위에서 정의한 profile로 packaging 됩니다
                    2. Resource 파일명으로 구분하여 관리하는 경우, 빌드 시 target 디렉토리로 대상 환경파일만 copy 되도록 include 설정
                 -->
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                    <resource>
                        <directory>src/main/resources/${env}</directory>
                        <includes>
                            <include>**/*.properties</include>
                        </includes>
                        <filtering>true</filtering>
                    </resource>
                </resources>
            </build>
        </profile>

        <!-- dev phase -->
        <profile>
            <id>dev</id>
            <properties>
                <!-- 개발환경 또는 개발환경을 판단하는 정보 -->
                <env>dev</env>
            </properties>
            <build>
                <!-- dev 에서 사용될 plugins -->
                <plugins>
                    <plugin>
                        <artifactId>maven-eclipse-plugin</artifactId>
                        <version>2.9</version>
                        <configuration>
                            <additionalProjectnatures>
                                <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                            </additionalProjectnatures>
                            <additionalBuildcommands>
                                <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                            </additionalBuildcommands>
                            <downloadSources>true</downloadSources>
                            <downloadJavadocs>true</downloadJavadocs>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>2.5.1</version>
                        <configuration>
                            <source>8</source>
                            <target>8</target>
                            <compilerArgument>-Xlint:all</compilerArgument>
                            <showWarnings>true</showWarnings>
                            <showDeprecation>true</showDeprecation>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.2.1</version>
                        <configuration>
                            <mainClass>org.test.int1.Main</mainClass>
                        </configuration>
                    </plugin>
                </plugins>
                <!--
                    dev 에서 사용될 resources
                    1. mvn package -P 프로파일명 으로 패키징 시에 위에서 정의한 profile로 packaging 됩니다
                    2. Resource 파일명으로 구분하여 관리하는 경우, 빌드 시 target 디렉토리로 대상 환경파일만 copy 되도록 include 설정
                 -->
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                    <resource>
                        <directory>src/main/resources/${env}</directory>
                        <includes>
                            <include>**/*.properties</include>
                        </includes>
                        <filtering>true</filtering>
                    </resource>
                </resources>
            </build>
        </profile>

        <!-- prod phase -->
        <profile>
            <id>prod</id>
            <properties>
                <!-- 운영환경 또는 개발환경을 판단하는 정보 -->
                <env>prod</env>
            </properties>
            <build>
                <!-- prod 에서 사용될 plugins -->
                <plugins>
                    <plugin>
                        <artifactId>maven-eclipse-plugin</artifactId>
                        <version>2.9</version>
                        <configuration>
                            <additionalProjectnatures>
                                <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                            </additionalProjectnatures>
                            <additionalBuildcommands>
                                <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                            </additionalBuildcommands>
                            <downloadSources>true</downloadSources>
                            <downloadJavadocs>true</downloadJavadocs>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>2.5.1</version>
                        <configuration>
                            <source>8</source>
                            <target>8</target>
                            <compilerArgument>-Xlint:all</compilerArgument>
                            <showWarnings>true</showWarnings>
                            <showDeprecation>true</showDeprecation>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.2.1</version>
                        <configuration>
                            <mainClass>org.test.int1.Main</mainClass>
                        </configuration>
                    </plugin>
                </plugins>
                <!--
                    prod 에서 사용될 resources
                    1. mvn package -P 프로파일명 으로 패키징 시에 위에서 정의한 profile로 packaging 됩니다
                    2. Resource 파일명으로 구분하여 관리하는 경우, 빌드 시 target 디렉토리로 대상 환경파일만 copy 되도록 include 설정
                 -->
                <resources>
                    <resource>
                        <directory>src/main/resources/</directory>
                        <includes>
                            <include>**/${env}.properties</include>
                        </includes>
                        <filtering>true</filtering>
                    </resource>
                </resources>
            </build>
        </profile>
    </profiles>
</project>
